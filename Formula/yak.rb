# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Yak < Formula
  desc "A tool to log in to AWS through Okta"
  homepage "https://github.com/redbubble/yak"
  version "1.6.0-rc0"

  depends_on "pinentry-mac"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/redbubble/yak/releases/download/v1.6.0-rc0/yak_1.6.0-rc0_darwin_arm64.tar.gz"
      sha256 "654f1da45423ca3c6b5cfd3abef40bf85ed8d18f928f14e88a239ab92320175e"

      def install
        bin.install "yak"
        bash_completion.install "static/completions/yak.bash" => "yak"
        zsh_completion.install "static/completions/yak.zsh" => "_yak"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/redbubble/yak/releases/download/v1.6.0-rc0/yak_1.6.0-rc0_darwin_amd64.tar.gz"
      sha256 "b934bae24c7be72d6b0d438d3fd99489938b01c5bf7754d1d326c565f5144911"

      def install
        bin.install "yak"
        bash_completion.install "static/completions/yak.bash" => "yak"
        zsh_completion.install "static/completions/yak.zsh" => "_yak"
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/redbubble/yak/releases/download/v1.6.0-rc0/yak_1.6.0-rc0_linux_arm64.tar.gz"
      sha256 "a279dacd2862210a15625dbb7f8d98cb0ef28ac557759e760d60b2e0278eaa28"

      def install
        bin.install "yak"
        bash_completion.install "static/completions/yak.bash" => "yak"
        zsh_completion.install "static/completions/yak.zsh" => "_yak"
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/redbubble/yak/releases/download/v1.6.0-rc0/yak_1.6.0-rc0_linux_amd64.tar.gz"
      sha256 "51b6b1cec159e554dcd47005251a8abb31663ae37b70aa94149203c3d7444103"

      def install
        bin.install "yak"
        bash_completion.install "static/completions/yak.bash" => "yak"
        zsh_completion.install "static/completions/yak.zsh" => "_yak"
      end
    end
  end

  test do
    system "#{bin}/yak --help"
  end
end
